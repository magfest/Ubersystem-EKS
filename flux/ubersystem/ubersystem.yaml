---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ${eventname}-uploads
  namespace: default
  finalizers:
  - kubernetes.io/pvc-protection
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: efs-sc
  resources:
    requests:
      storage: 20Gi

---
apiVersion: v1
kind: Service
metadata:
  name: ${eventname}-web
  namespace: default
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
      name: web
  selector:
    app: ${eventname}-web

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ${eventname}-web
  namespace: default
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: 100m
spec:
  rules:
  - host: ${hostname}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ${eventname}-web
            port:
              number: 80
  ingressClassName: nginx

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${eventname}-web
  namespace: default
  labels:
    app: ${eventname}-web
spec:
  replicas: ${webreplicas:=1}
  selector:
    matchLabels:
      app: ${eventname}-web
  template:
    metadata:
      labels:
        app: ${eventname}-web
    spec:
      serviceAccountName: ubersystem-email
      volumes:
      - name: ${eventname}-uploads
        persistentVolumeClaim:
          claimName: ${eventname}-uploads
      terminationGracePeriodSeconds: 5
      containers:
      - name: web
        image: "${container}"
        livenessProbe:
          timeoutSeconds: 10
          periodSeconds: 60
          httpGet:
            path: /landing/
            port: 80
        readinessProbe:
          timeoutSeconds: 10
          periodSeconds: 60
          httpGet:
            path: /devtools/health
            port: 80
        startupProbe:
          initialDelaySeconds: 20
          failureThreshold: 20
          httpGet:
            path: /devtools/health
            port: 80
        resources:
          requests:
            memory: ${webram}
            cpu: ${webcpu}
          limits:
            memory: "1024Mi"
            cpu: "1000m"
        ports:
        - containerPort: 80
        env:
        - name: "DB_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: ubersystem-app
              key: password
        - name: "DB_USERNAME"
          valueFrom:
            secretKeyRef:
              name: ubersystem-app
              key: username
        - name: "DB_CONNECTION_STRING"
          value: "postgresql://$(DB_USERNAME):$(DB_PASSWORD)@ubersystem-pool.default:5432/${eventname}"
        - name: "CONFIG_REPO"
          value: "https://github.com/magfest/terraform-aws-magfest.git"
        - name: "CONFIG_PATHS"
          value: "uber_config/environments/${environment} uber_config/events/${eventname}/${eventyear}/${environment}"
        - name: "uber_cherrypy_server_socket_port"
          value: "80"
        - name: "uber_cherrypy_server_socket_host"
          value: "0.0.0.0"
        - name: "uber_cherrypy_server_thread_pool"
          value: "10"
        - name: "uber_cherrypy_server_socket_timeout"
          value: "1"
        - name: "uber_cherrypy_tools_sessions_host"
          value: "${eventname}-redis"
        - name: "uber_cherrypy_tools_sessions_prefix"
          value: "uber"
        - name: "uber_cherrypy_tools_sessions_storage_type"
          value: "redis"
        - name: "uber_redis_host"
          value: "${eventname}-redis"
        - name: "uber_secret_broker_url"
          value: "amqp://celery:celery@${eventname}-rabbitmq:5672/uber"
        - name: "uber_hostname"
          value: "localhost"
        - name: "uber_dev_box"
          value: "True"
        volumeMounts:
        - mountPath: "/app/plugins/uber/uploaded_files"
          name: ${eventname}-uploads

---
apiVersion: batch/v1
kind: Job
metadata:
  name: ${eventname}-create-admin
  namespace: default
spec:
  template:
    spec:
      containers:
      - name: create-admin
        image: quay.io/curl/curl:latest
        command: ["curl", "--fail-with-body", "http://${eventname}-web.default.svc.cluster.local:80/accounts/insert_test_admin"]
      restartPolicy: Never
  backoffLimit: 4
  successfulJobsHistoryLimit: 0
  failedJobsHistoryLimit: 0

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ${eventname}-celery-beats
  namespace: default
  labels:
    app: ${eventname}-celery-beats
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${eventname}-celery-beats
  template:
    metadata:
      labels:
        app: ${eventname}-celery-beats
    spec:
      volumes:
      - name: ${eventname}-uploads
        persistentVolumeClaim:
          claimName: ${eventname}-uploads
      terminationGracePeriodSeconds: 5
      containers:
      - name: celery-beats
        image: "${container}"
        args: ["celery-beat"]
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        env:
        - name: "DB_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: ubersystem-app
              key: password
        - name: "DB_USERNAME"
          valueFrom:
            secretKeyRef:
              name: ubersystem-app
              key: username
        - name: "DB_CONNECTION_STRING"
          value: "postgresql://$(DB_USERNAME):$(DB_PASSWORD)@ubersystem-pool.default:5432/${eventname}"
        - name: "LOG_CONFIG"
          value: "true"
        - name: "CONFIG_REPO"
          value: "https://github.com/magfest/terraform-aws-magfest.git"
        - name: "CONFIG_PATHS"
          value: "uber_config/environments/${environment} uber_config/events/${eventname}/${eventyear}/${environment}"
        - name: "uber_cherrypy_server_socket_port"
          value: "80"
        - name: "uber_cherrypy_server_socket_host"
          value: "0.0.0.0"
        - name: "uber_cherrypy_server_socket_timeout"
          value: "1"
        - name: "uber_cherrypy_tools_sessions_host"
          value: "${eventname}-redis"
        - name: "uber_cherrypy_tools_sessions_prefix"
          value: "uber"
        - name: "uber_cherrypy_tools_sessions_storage_type"
          value: "redis"
        - name: "uber_redis_host"
          value: "${eventname}-redis"
        - name: "uber_secret_broker_url"
          value: "amqp://celery:celery@${eventname}-rabbitmq:5672/uber"
        - name: "uber_hostname"
          value: "localhost"
        - name: "uber_dev_box"
          value: "True"
        volumeMounts:
        - mountPath: "/app/plugins/uber/uploaded_files"
          name: ${eventname}-uploads

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${eventname}-celery-worker
  namespace: default
  labels:
    app: ${eventname}-celery-worker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${eventname}-celery-worker
  template:
    metadata:
      labels:
        app: ${eventname}-celery-worker
    spec:
      serviceAccountName: ubersystem-email
      volumes:
      - name: ${eventname}-uploads
        persistentVolumeClaim:
          claimName: ${eventname}-uploads
      terminationGracePeriodSeconds: 5
      containers:
      - name: celery-worker
        image: "${container}"
        args: ["celery-worker"]
        resources:
          requests:
            memory: ${celeryram}
            cpu: ${celerycpu}
          limits:
            memory: "1024Mi"
            cpu: "1000m"
        env:
        - name: "DB_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: ubersystem-app
              key: password
        - name: "DB_USERNAME"
          valueFrom:
            secretKeyRef:
              name: ubersystem-app
              key: username
        - name: "DB_CONNECTION_STRING"
          value: "postgresql://$(DB_USERNAME):$(DB_PASSWORD)@ubersystem-pool.default:5432/${eventname}"
        - name: "LOG_CONFIG"
          value: "true"
        - name: "CONFIG_REPO"
          value: "https://github.com/magfest/terraform-aws-magfest.git"
        - name: "CONFIG_PATHS"
          value: "uber_config/environments/${environment} uber_config/events/${eventname}/${eventyear}/${environment}"
        - name: "uber_cherrypy_server_socket_port"
          value: "80"
        - name: "uber_cherrypy_server_socket_host"
          value: "0.0.0.0"
        - name: "uber_cherrypy_server_socket_timeout"
          value: "1"
        - name: "uber_cherrypy_tools_sessions_host"
          value: "${eventname}-redis"
        - name: "uber_cherrypy_tools_sessions_prefix"
          value: "uber"
        - name: "uber_cherrypy_tools_sessions_storage_type"
          value: "redis"
        - name: "uber_redis_host"
          value: "${eventname}-redis"
        - name: "uber_secret_broker_url"
          value: "amqp://celery:celery@${eventname}-rabbitmq:5672/uber"
        - name: "uber_hostname"
          value: "localhost"
        - name: "uber_dev_box"
          value: "True"
        volumeMounts:
        - mountPath: "/app/plugins/uber/uploaded_files"
          name: ${eventname}-uploads
---
apiVersion: postgresql.cnpg.io/v1
kind: Database
metadata:
  name: ${eventname}
  namespace: default
spec:
  name: ${eventname}
  owner: app
  cluster:
    name: ubersystem