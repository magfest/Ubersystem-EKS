---
name: Pulumi Staging
on:
  workflow_dispatch: {}
  push:
    branches:
      - main
jobs:
  pulumi_preview:
    environment: staging
    name: Preview Changes
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: ${{ secrets.AWS_REGION }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - run: pip install -r platform/requirements.txt
      - uses: pulumi/actions@v6
        with:
          command: preview
          stack-name: organization/staging
          cloud-url: ${{ secrets.PULUMI_BUCKET }}
          work-dir: platform
          comment-on-pr: true
          comment-on-summary: true
        env:
          PULUMI_CONFIG_PASSPHRASE: ${{ secrets.PULUMI_CONFIG_PASSPHRASE }}
      - name: Set job output based on preview exit code
        # If preview_exit_code was 1 (error), we want the job to fail.
        # Otherwise, we output the actual exit code from preview.
        run: |
          if [ "${{ steps.preview.outputs.exit_code }}" == "1" ]; then
            echo "Pulumi preview failed with an error."
            exit 1
          fi
          echo "preview_exit_code=${{ steps.preview.outputs.exit_code }}" >> "$GITHUB_OUTPUT"

  update_staging:
    environment: staging
    name: Update Staging
    runs-on: ubuntu-latest
    needs: pulumi_preview
    if: needs.pulumi_preview.outputs.preview_exit_code == '2'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: ${{ secrets.AWS_REGION }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - run: pip install -r platform/requirements.txt
      - uses: pulumi/actions@v6
        with:
          command: up
          stack-name: organization/staging
          cloud-url: ${{ secrets.PULUMI_BUCKET }}
          work-dir: platform
        env:
          PULUMI_CONFIG_PASSPHRASE: ${{ secrets.PULUMI_CONFIG_PASSPHRASE }}
